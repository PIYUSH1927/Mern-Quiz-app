{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// createing reducer with intial value\nexport const questionReducer = createSlice({\n  name: 'questions',\n  initialState: {\n    // store questions and answers\n    queue: [],\n    answers: [],\n    // trace is used to track user questions if user click next it increase trace value to 1\n    trace: 0\n  },\n  // reducers allows you to specfiy and despatch an action and action allows you to change the value of store \n  reducers: {\n    // using the action you can acces the user input\n    // inside state you have cuurent state\n    startExamAction: (state, action) => {\n      let {\n        question,\n        answers\n      } = action.payload;\n      return {\n        // update intial state\n        ...state,\n        queue: question,\n        answers: answers\n      };\n    },\n    moveNextAction: state => {\n      return {\n        ...state,\n        trace: state.trace + 1\n      };\n    },\n    movePrevAction: state => {\n      return {\n        ...state,\n        trace: state.trace - 1\n      };\n    },\n    resetAllAction: () => {\n      return {\n        queue: [],\n        answers: [],\n        trace: 0\n      };\n    }\n  }\n});\nexport const {\n  startExamAction,\n  moveNextAction,\n  movePrevAction,\n  resetAllAction\n} = questionReducer.actions;\nexport default questionReducer.reducer;","map":{"version":3,"names":["createSlice","questionReducer","name","initialState","queue","answers","trace","reducers","startExamAction","state","action","question","payload","moveNextAction","movePrevAction","resetAllAction","actions","reducer"],"sources":["C:/Users/HP/Downloads/quiz/client/src/redux/question_reducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\n\n// createing reducer with intial value\nexport const questionReducer = createSlice({\n    name : 'questions',\n    initialState : {\n        // store questions and answers\n        queue :[],\n        answers : [],\n        // trace is used to track user questions if user click next it increase trace value to 1\n        trace : 0\n    },\n    // reducers allows you to specfiy and despatch an action and action allows you to change the value of store \n    reducers : {\n        // using the action you can acces the user input\n        // inside state you have cuurent state\n        startExamAction : (state,action) => {\n            let {question,answers} =action.payload\n            return{\n                // update intial state\n                ...state,\n                queue : question,\n                answers : answers\n            }\n        },\n        moveNextAction : (state) =>{\n            return{\n                ...state,\n                trace : state.trace +1\n            }\n        },\n        movePrevAction : (state) =>{\n            return{\n                ...state,\n                trace : state.trace - 1\n            }\n        },\n        resetAllAction : () =>{\n            return{\n                queue :[],\n                answers : [],\n                trace : 0 \n            } \n        } \n\n    }\n})\n\nexport const {startExamAction, moveNextAction,movePrevAction,resetAllAction} = questionReducer.actions;\n\nexport default questionReducer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAG9C;AACA,OAAO,MAAMC,eAAe,GAAGD,WAAW,CAAC;EACvCE,IAAI,EAAG,WAAW;EAClBC,YAAY,EAAG;IACX;IACAC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAG,EAAE;IACZ;IACAC,KAAK,EAAG;EACZ,CAAC;EACD;EACAC,QAAQ,EAAG;IACP;IACA;IACAC,eAAe,EAAGA,CAACC,KAAK,EAACC,MAAM,KAAK;MAChC,IAAI;QAACC,QAAQ;QAACN;MAAO,CAAC,GAAEK,MAAM,CAACE,OAAO;MACtC,OAAM;QACF;QACA,GAAGH,KAAK;QACRL,KAAK,EAAGO,QAAQ;QAChBN,OAAO,EAAGA;MACd,CAAC;IACL,CAAC;IACDQ,cAAc,EAAIJ,KAAK,IAAI;MACvB,OAAM;QACF,GAAGA,KAAK;QACRH,KAAK,EAAGG,KAAK,CAACH,KAAK,GAAE;MACzB,CAAC;IACL,CAAC;IACDQ,cAAc,EAAIL,KAAK,IAAI;MACvB,OAAM;QACF,GAAGA,KAAK;QACRH,KAAK,EAAGG,KAAK,CAACH,KAAK,GAAG;MAC1B,CAAC;IACL,CAAC;IACDS,cAAc,EAAGA,CAAA,KAAK;MAClB,OAAM;QACFX,KAAK,EAAE,EAAE;QACTC,OAAO,EAAG,EAAE;QACZC,KAAK,EAAG;MACZ,CAAC;IACL;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACE,eAAe;EAAEK,cAAc;EAACC,cAAc;EAACC;AAAc,CAAC,GAAGd,eAAe,CAACe,OAAO;AAEtG,eAAef,eAAe,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}